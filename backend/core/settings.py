<<<<<<< HEAD
'''
Django settings for Q8Tasweet project.
Generated by 'Q8 Vision - Sanad' using Django 4.2.3.
'''
=======
<<<<<<< HEAD
'''
Django settings for Q8Tasweet project.
Generated by 'Q8 Vision - Sanad' using Django 4.2.3.
'''
=======
"""
Django settings for Q8Tasweet project.
Generated by 'Q8 Vision - Sanad' using Django 4.2.3.
"""

>>>>>>> sanad
>>>>>>> 6b4e5b9952eab08f0cf9827086dd9b8844a98747
import os
import dotenv
from pathlib import Path
from datetime import timedelta
<<<<<<< HEAD
=======
from decouple import config

>>>>>>> sanad
# from .adminReorder import ADMIN_REORDER

dotenv.load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: Secret keys is kept outsdide in a .env!
<<<<<<< HEAD
SECRET_KEY = os.environ.get('SECRET_KEY')
JWT_SECRET_KEY = os.environ.get('JWT_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
=======
SECRET_KEY = os.environ.get("SECRET_KEY")
JWT_SECRET_KEY = os.environ.get("JWT_SECRET_KEY")
# SQLITE_DATABASE = os.environ.get("SQLITE_DATABASE")

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("NAME"),
        "USER": os.environ.get("USER"),
        "PASSWORD": os.environ.get("DB_PASSWORD"),
        "HOST": os.environ.get("HOST"),
        "PORT": os.environ.get("PORT"),
    },
}


# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY="apuvicmef^(!j8gx&clu0u(!8m0r^etok^l0)kc!---#(i5=dt"
# JWT_SECRET_KEY="a23b8ac92bba1d38510e45332780f4a65ac33f4a5a6efa17ecd38330e9a3e29f"
# DB_NAME=q8tasweet
# DB_USER=postgres
# DB_PASSWORD="KWT11782"
# DB_HOST=localhost
# DB_PORT=5432

>>>>>>> sanad
DEBUG = True


ALLOWED_HOSTS = [
    # Production
<<<<<<< HEAD
    'www.q8tasweet.com',
    'q8tasweet.com',

    # Development
    '139.59.86.129',
    '127.0.0.1',
    'localhost',
    'localhost:3000',
    '*',
    ]

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
=======
    "www.q8tasweet.com",
    "q8tasweet.com",
    # Development
    "139.59.86.129",
    "127.0.0.1",
    "localhost",
    "localhost:3000",
    "127.0.0.1:8001",
    "*",
]

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",
>>>>>>> sanad
    }
}

# Application definition
INSTALLED_APPS = [
    # Socket & Channels
<<<<<<< HEAD
    'daphne',

    'rest_framework',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    
    # Third Party Apps
    'django.contrib.staticfiles',
    'rest_framework_simplejwt.token_blacklist',
    'corsheaders',
    'django_extensions',
    # 'admin_reorder',

    # Q8 Tasweet Apps
    'core',
    # 'management',
    # 'apps.media',
    'apps.configs',
    'apps.auths',
    'apps.campaigns',
    'apps.elections.apps.ElectionConfig',
    'apps.categories',
    'apps.candidates',
    'apps.electors',
    'apps.notifications',
=======
    "daphne",
    "rest_framework",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    # Third Party Apps
    "django.contrib.staticfiles",
    "rest_framework_simplejwt.token_blacklist",
    "corsheaders",
    "django_extensions",
    #
    # Q8 Tasweet Apps
    "core",
    # "management",
    # 'apps.media',
    "apps.auths",
    "apps.settings",
    "apps.tags",
    "apps.elections",
    "apps.candidates",
    # "apps.notifications",
    # schemas and related Apps
    "apps.schemas",
    # "apps.schemas.areas",
    # "apps.schemas.committees",
    # "apps.schemas.electors",
    "apps.campaigns",
    # "apps.schema",
    # "apps.electionData",
>>>>>>> sanad
]

# Order is important TODO: for more info to be written
MIDDLEWARE = [
<<<<<<< HEAD
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    
    'django.contrib.sessions.middleware.SessionMiddleware',
    
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',

    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 'django_hosts.middleware.HostsRequestMiddleware',
    # 'admin_reorder.middleware.ModelAdminReorder',
]

ROOT_URLCONF = 'core.urls'
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']
=======
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # >>>>>>> origin/main
    # 'django_hosts.middleware.HostsRequestMiddleware',
]


ROOT_URLCONF = "core.urls"
CSRF_TRUSTED_ORIGINS = ["http://localhost:3000"]
>>>>>>> sanad
CORS_ALLOW_CREDENTIALS = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
<<<<<<< HEAD
        'DIRS': [os.path.join(BASE_DIR, '../frontend/build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
=======
        'DIRS': [
            os.path.join(BASE_DIR, '../frontend/build'),  # Frontend templates directory
            os.path.join(BASE_DIR, 'templates'),       # Email templates directory
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
>>>>>>> sanad
                # 'apps.configs.configs.context_processors.site_configs',
            ],
        },
    },
]

<<<<<<< HEAD
WSGI_APPLICATION = 'core.wsgi.application'
ASGI_APPLICATION = 'core.asgi.application'


# Database: TODO: To be outside of settings
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
=======
# WSGI_APPLICATION = "core.wsgi.application"
ASGI_APPLICATION = "core.asgi.application"
>>>>>>> sanad


# Password Validation #TODO: to be in a sperate File as well, MAYBE!
AUTH_PASSWORD_VALIDATORS = [
    {
<<<<<<< HEAD
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
=======
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
>>>>>>> sanad
    },
]

# Rest Framework
REST_FRAMEWORK = {
<<<<<<< HEAD
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Secure by default
        ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # JWT authentication
        'rest_framework.authentication.SessionAuthentication',  # Keep session auth if you still need it
        'rest_framework.authentication.TokenAuthentication',
        ],

    'DEFAULT_RENDERER_CLASSES': [
        'djangorestframework_camel_case.render.CamelCaseJSONRenderer',
        ],
    'DEFAULT_PARSER_CLASSES': (
        'djangorestframework_camel_case.parser.CamelCaseJSONParser',
    ),

    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
}

# CORS settings 
CORS_ALLOWED_ORIGINS = [
    # Production
    'http://q8election.com',
    
    # Development
    'http://localhost:8000',
    'http://localhost:3000',
    'http://127.0.0.1:8000',
    'http://127.0.0.1:3000',
    'http://127.0.0.2:3000',
    'http://localhost:3000',
    'http://localhost:3001',
]

CORS_ALLOW_CREDENTIALS = True

# For Development only
CORS_ALLOW_ALL_ORIGINS = True

CSRF_COOKIE_SECURE = False  # Set to True in a production environment with HTTPS
CSRF_COOKIE_SAMESITE = 'None'  # or 'Lax' or 'Strict' depending on your needs

# Custom user model
AUTH_USER_MODEL = 'auths.User'

# JWT settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60000),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=10),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': (
        'Bearer',
        'JWT',
    ),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kuwait'
=======
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",  # Secure by default
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",  # JWT authentication
        "rest_framework.authentication.SessionAuthentication",  # Keep session auth if you still need it
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_RENDERER_CLASSES": [
        "djangorestframework_camel_case.render.CamelCaseJSONRenderer",
    ],
    "DEFAULT_PARSER_CLASSES": (
        "djangorestframework_camel_case.parser.CamelCaseJSONParser",
    ),
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
}

# CORS settings
CORS_ALLOWED_ORIGINS = [
    # Production
    "http://q8election.com",
    # Development
    "http://localhost:8000",
    "http://localhost:3000",
    "http://127.0.0.1:8000",
    "http://127.0.0.1:3000",
    "http://127.0.0.2:3000",
    "http://localhost:3000",
    "http://localhost:3001",
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True  # For Development only
CSRF_COOKIE_SECURE = True  # Set to True in production with HTTPS
CSRF_COOKIE_SAMESITE = "Lax"  # Adjust based on your security needs

# Custom group model
AUTH_USER_MODEL = "auths.User"

# JWT settings
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=60),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": None,
    "AUTH_HEADER_TYPES": (
        "Bearer",
        "JWT",
    ),
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "group_id",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
}

# Internationalization
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Asia/Kuwait"
>>>>>>> sanad
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
<<<<<<< HEAD
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # Adjust the path as needed

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, '../frontend/build/static')
]
=======
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"
STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")  # Adjust the path as needed

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

STATICFILES_DIRS = [os.path.join(BASE_DIR, "../frontend/build/static")]

# Email Configuration 29/03/24
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "shankar.wxit@gmail.com"
EMAIL_HOST_PASSWORD = "mehynnlprcmqilwn"
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
>>>>>>> sanad
